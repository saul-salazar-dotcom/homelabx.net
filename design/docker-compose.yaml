name: design

networks:
  proxy:
    external: true
  auth:
    external: true
  smtp:
    external: true

services:
  frontend:
    image: penpotapp/frontend
    restart: always
    ports:
      - 9001:80
    volumes:
      - ./assets:/opt/data/assets
    depends_on:
      - backend
      - exporter
    networks:
      - proxy
      - default
      - auth
      - smtp
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`design.homelab.com`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=https"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"
    environment:
      ## You can read more about all available flags on:
      ## https://help.penpot.app/technical-guide/configuration/#advanced-configuration
      - PENPOT_FLAGS=enable-registration enable-login-with-password disable-onboarding enable-login-with-oidc enable-oidc-registration
      - PENPOT_BACKEND_URI=http://${COMPOSE_PROJECT_NAME}-backend-1
      - PENPOT_EXPORTER_URI=http://${COMPOSE_PROJECT_NAME}-exporter-1
      - PENPOT_OIDC_CLIENT_ID=design

  backend:
    # image: penpotapp/backend
    build: .
    restart: always
    volumes:
      - ./assets:/opt/data/assets
    depends_on:
      - postgres
      - redis
    networks:
      - default
      - auth
      - smtp
    environment:
      ## You can read more about all available flags and other
      ## environment variables for the backend here:
      ## https://help.penpot.app/technical-guide/configuration/#advanced-configuration
      - PENPOT_FLAGS=enable-registration enable-login-with-password disable-email-verification enable-smtp enable-prepl-server enable-login-with-oidc enable-oidc-registration

      ## Penpot SECRET KEY. It serves as a master key from which other keys for subsystems
      ## (eg http sessions, or invitations) are derived.
      ## If you leve it commented, all created sessions and invitations will
      ## become invalid on container restart.
      ## If you going to uncomment this, we recommend use here a trully randomly generated
      ## 512 bits base64 encoded string.  You can generate one with:
      ## python3 -c "import secrets; print(secrets.token_urlsafe(64))"
      - PENPOT_SECRET_KEY=rWeYlZvU_GvbQ_97gs6R69X4j3a0Xq9XP_QmWEyW3KOXU0rJD25vNeexrCPbkaOvTWWAnLZ5gOUVMw2zYjnXOw

      ## The PREPL host. Mainly used for external programatic access to penpot backend
      ## (example: admin). By default it listen on `localhost` but if you are going to use
      ## the `admin`, you will need to uncomment this and set the host to `0.0.0.0`.

      - PENPOT_PREPL_HOST=0.0.0.0

      ## Public URI. If you are going to expose this instance to the internet and use it
      ## under different domain than 'localhost', you will need to adjust it to the final
      ## domain.
      - PENPOT_PUBLIC_URI=https://design.homelab.com
      - PENPOT_HTTP_SERVER_PORT=80

      ## Database connection parameters. Don't touch them unless you are using custom
      ## postgresql connection parameters.
      - PENPOT_DATABASE_URI=postgresql://postgres/penpot
      - PENPOT_DATABASE_USERNAME=penpot
      - PENPOT_DATABASE_PASSWORD=penpot

      ## Redis is used for the websockets notifications. Don't touch unless the redis
      ## container has different parameters or different name.
      - PENPOT_REDIS_URI=redis://redis/0

      ## Default configuration for assets storage: using filesystem based with all files
      ## stored in a docker volume.
      - PENPOT_ASSETS_STORAGE_BACKEND=assets-fs
      - PENPOT_STORAGE_ASSETS_FS_DIRECTORY=/opt/data/assets

      ## Also can be configured to to use a S3 compatible storage
      ## service like MiniIO. Look below for minio service setup.

      # - AWS_ACCESS_KEY_ID=<KEY_ID>
      # - AWS_SECRET_ACCESS_KEY=<ACCESS_KEY>
      # - PENPOT_ASSETS_STORAGE_BACKEND=assets-s3
      # - PENPOT_STORAGE_ASSETS_S3_ENDPOINT=http://penpot-minio:9000
      # - PENPOT_STORAGE_ASSETS_S3_BUCKET=<BUKET_NAME>

      ## Telemetry. When enabled, a periodical process will send anonymous data about this
      ## instance. Telemetry data will enable us to learn on how the application is used,
      ## based on real scenarios. If you want to help us, please leave it enabled. You can
      ## audit what data we send with the code available on github

      - PENPOT_TELEMETRY_ENABLED=true

      ## Example SMTP/Email configuration. By default, emails are sent to the mailcatch
      ## service, but for production usage is recommended to setup a real SMTP
      ## provider. Emails are used to confirm user registrations & invitations. Look below
      ## how mailcatch service is configured.

      - PENPOT_SMTP_DEFAULT_FROM=no-reply@example.com
      - PENPOT_SMTP_DEFAULT_REPLY_TO=no-reply@example.com
      - PENPOT_SMTP_HOST=mailcatch
      - PENPOT_SMTP_PORT=1025
      - PENPOT_SMTP_USERNAME=
      - PENPOT_SMTP_PASSWORD=
      - PENPOT_SMTP_TLS=false
      - PENPOT_SMTP_SSL=false

      # OIDC
      - PENPOT_OIDC_CLIENT_ID=design
      - PENPOT_OIDC_CLIENT_SECRET=insecure_secret
      - PENPOT_OIDC_BASE_URI=https://auth.homelab.com
      - PENPOT_OIDC_AUTH_URI=https://auth.homelab.com/api/oidc/authorization
      - PENPOT_OIDC_TOKEN_URI=https://auth.homelab.com/api/oidc/token
      - PENPOT_OIDC_USER_URI=https://auth.homelab.com/api/oidc/userinfo
      - PENPOT_OIDC_SCOPES=openid profile email

  exporter:
    image: "penpotapp/exporter"
    restart: always
    networks:
      - default
    environment:
      # Don't touch it; this uses internal docker network to communicate with the frontend.
      - PENPOT_PUBLIC_URI=http://frontend

      ## Redis is used for the websockets notifications.
      - PENPOT_REDIS_URI=redis://redis/0

  postgres:
    image: postgres:15
    restart: always
    stop_signal: SIGINT
    networks:
      - default
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_INITDB_ARGS=--data-checksums
      - POSTGRES_DB=penpot
      - POSTGRES_USER=penpot
      - POSTGRES_PASSWORD=penpot

  redis:
    image: redis:7
    restart: always
    networks:
      - default
